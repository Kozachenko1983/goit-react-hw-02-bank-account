{"version":3,"sources":["components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.js","index.js"],"names":["Controls","state","amount","handleChange","target","name","value","setState","Number","handleSubmit","e","preventDefault","notify","props","onDeposit","balance","onWithdrawal","msg","toast","error","this","className","onSubmit","type","onChange","onClick","Component","Balance","income","expenses","TransactionHistory","items","length","map","el","key","id","date","Dashboard","onBalance","prevState","dataInput","data","shortid","generate","Date","toLocaleString","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec290c3b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Controls extends Component {\n  static propTypes = {\n    onDeposit: PropTypes.func.isRequired,\n    onWithdrawal: PropTypes.func.isRequired,\n    balance: PropTypes.number.isRequired,\n  };\n\n  state = {\n    amount: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: Number(value),\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.amount <= 0) {\n      this.notify('Введите сумму для проведения операции!');\n    } else {\n      if (e.target.name === 'Deposit') {\n        this.props.onDeposit({ ...this.state });\n        this.setState({\n          amount: '',\n        });\n      }\n      if (e.target.name === 'Withdraw') {\n        if (this.props.balance >= this.state.amount) {\n          this.props.onWithdrawal({ ...this.state });\n        } else {\n          this.notify('На счету недостаточно средств для проведения операции!');\n        }\n        this.setState({\n          amount: '',\n        });\n      }\n    }\n  };\n\n  notify = msg => {\n    toast.error(msg);\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className=\"controls\">\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n          <button type=\"button\" name=\"Deposit\" onClick={this.handleSubmit}>\n            Deposit\n          </button>\n          <button type=\"button\" name=\"Withdraw\" onClick={this.handleSubmit}>\n            Withdraw\n          </button>\n        </form>\n        <ToastContainer />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Balance = ({ income, expenses, balance }) => (\n  <section className=\"balance\">\n    <span>income:{income}</span>\n    <span>expenses:{expenses}</span>\n    <span>Balance:{balance}</span>\n  </section>\n);\n\nBalance.propTypes = {\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TransactionHistory = ({ items }) =>\n  items.length > 0 && (\n    <table className=\"history\">\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      {items.map(el => (\n        <tbody key={el.id}>\n          <tr>\n            <td>{el.type}</td>\n            <td>{el.amount}</td>\n            <td>{el.date}</td>\n          </tr>\n        </tbody>\n      ))}\n    </table>\n  );\nTransactionHistory.propTypes = {\n  items: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired,\n    date: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nexport default class Dashboard extends Component {\n  state = {\n    items: [],\n    income: 0,\n    expenses: 0,\n    balance: 0,\n  };\n\n  onBalance = () => {\n    this.setState(prevState => ({\n      balance: prevState.income - prevState.expenses,\n    }));\n  };\n\n  onDeposit = dataInput => {\n    const data = {\n      ...dataInput,\n      id: shortid.generate(),\n      date: new Date().toLocaleString(),\n      type: 'Deposit',\n    };\n    this.setState(prevState => ({\n      items: [...prevState.items, data],\n      income: prevState.income + dataInput.amount,\n    }));\n    this.onBalance();\n  };\n\n  onWithdrawal = dataInput => {\n    const data = {\n      ...dataInput,\n      id: shortid.generate(),\n      date: new Date().toLocaleString(),\n      type: 'Withdraw',\n    };\n    this.setState(prevState => ({\n      items: [...prevState.items, data],\n      expenses: prevState.expenses + dataInput.amount,\n    }));\n    this.onBalance();\n  };\n\n  render() {\n    const { items, income, expenses, balance } = this.state;\n    return (\n      <div>\n        <Controls\n          onDeposit={this.onDeposit}\n          onWithdrawal={this.onWithdrawal}\n          balance={balance}\n        />\n        <Balance income={income} expenses={expenses} balance={balance} />\n        <TransactionHistory items={items} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n// import './normalize.css';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}